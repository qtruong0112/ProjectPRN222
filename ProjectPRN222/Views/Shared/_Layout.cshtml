@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProjectPRN222</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ProjectPRN222.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Views/Shared/_Layout.cshtml.css" asp-append-version="true" />
    <!-- Bootstrap Icons CDN (nếu chưa có) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-info shadow rounded-bottom-4 py-2 mb-4 animate-navbar">
            <div class="container-fluid">
                @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
                @{
                    var fullName = HttpContextAccessor.HttpContext.Session.GetString("FullName");
                    var roleId = HttpContextAccessor.HttpContext.Session.GetInt32("RoleId");
                }

                <a class="navbar-brand fw-bold text-white px-3" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-car-front-fill"></i> ProjectPRN222
                </a>
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar" aria-controls="mainNavbar"
                aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="mainNavbar">
                    <ul class="navbar-nav flex-grow-1 gap-1">
                       
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-area="" asp-controller="InspectionAppointments" asp-action="Index"><i class="bi bi-car-front"></i>Quản lý lịch hẹn đăng kiểm  </a>
                            </li>
                        
                        
                        
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-area="" asp-controller="Vehicles" asp-action="Index"><i class="bi bi-car-front"></i> Quản lý xe</a>
                            </li>
                        

                        
                        
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-area="" asp-controller="InspectionStations" asp-action="Index">
                                    <i class="bi bi-building"></i> Quản lý trạm đăng kiểm
                                </a>
                            </li>
                        
                        
                        
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-area="" asp-controller="InspectionRecords" asp-action="ForPolice"><i class="bi bi-shield-exclamation"></i> Tra cứu phương tiện vi phạm</a>
                            </li>
                        
                        
                        <li class="nav-item">
                            <a class="nav-link nav-link-custom" asp-area="" asp-controller="InspectionRecords" asp-action="ForOwnerVehicle"><i class="bi bi-search"></i> Tra cứu kết quả đăng kiểm</a>
                        </li>
                    </ul>

                   

                    <ul class="navbar-nav ms-lg-3">
                        @if (!string.IsNullOrEmpty(fullName))
                        {
                            <!-- Notification Dropdown -->
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-link-custom position-relative" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-bell"></i>
                                    <span id="headerNotificationBadge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="display: none;">
                                        0
                                    </span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end animate-dropdown" aria-labelledby="notificationDropdown" style="width: 350px;">
                                    <li class="dropdown-header d-flex justify-content-between align-items-center">
                                        <span>Thông báo</span>
                                        <a href="@Url.Action("Index", "Notifications")" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <div id="notificationDropdownList" style="max-height: 300px; overflow-y: auto;">
                                        <li class="dropdown-item-text text-center text-muted">
                                            <div class="spinner-border spinner-border-sm" role="status"></div>
                                            Đang tải...
                                        </li>
                                    </div>
                                </ul>
                            </li>
                            
                            <!-- User Dropdown -->
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle nav-link-custom" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-person-circle"></i> @fullName
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end animate-dropdown" aria-labelledby="userDropdown">
                                    <li><a class="dropdown-item" asp-controller="Accounts" asp-action="Edit" asp-route-id="@HttpContextAccessor.HttpContext.Session.GetInt32("UserId")"><i class="bi bi-pencil-square"></i> Thay đổi thông tin</a></li>
                                    @if (roleId == 5)
                                    {
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" asp-controller="Notifications" asp-action="Create"><i class="bi bi-bell-plus"></i> Tạo thông báo</a></li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="Accounts" asp-action="Logout"><i class="bi bi-box-arrow-right"></i> Đăng xuất</a></li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-controller="Accounts" asp-action="Login"><i class="bi bi-box-arrow-in-right"></i> Đăng nhập</a>
                            </li>
                        }
                    </ul>

                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - ProjectPRN222 - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    @functions {
        bool IsAllowedForRoles(params int[] roles)
        {
            var roleId = HttpContextAccessor.HttpContext.Session.GetInt32("RoleId");
            return roles.Contains(roleId ?? -1);
        }
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    @if (!string.IsNullOrEmpty(fullName))
    {
        <script>
            let headerConnection;
            
            // Khởi tạo SignalR cho header
            document.addEventListener('DOMContentLoaded', function() {
                initializeHeaderNotifications();
                loadHeaderNotifications();
            });

            function initializeHeaderNotifications() {
                headerConnection = new signalR.HubConnectionBuilder()
                    .withUrl("/notificationHub")
                    .build();

                headerConnection.start().then(function () {
                    console.log('Header SignalR Connected');
                }).catch(function (err) {
                    console.error('Header SignalR Connection Error: ', err);
                });

                // Lắng nghe thông báo mới
                headerConnection.on("ReceiveNotification", function (notification) {
                    updateHeaderNotificationBadge();
                    addNotificationToDropdown(notification);
                });
            }

            function updateHeaderNotificationBadge() {
                fetch('/Notifications/GetUnreadCount')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const badge = document.getElementById('headerNotificationBadge');
                            if (data.count > 0) {
                                badge.textContent = data.count;
                                badge.style.display = 'inline-block';
                            } else {
                                badge.style.display = 'none';
                            }
                        }
                    });
            }

            function loadHeaderNotifications() {
                fetch('/Notifications/GetNotifications?take=5')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const dropdownList = document.getElementById('notificationDropdownList');
                            dropdownList.innerHTML = '';
                            
                            if (data.data.length > 0) {
                                data.data.forEach(notification => {
                                    addNotificationToDropdown(notification);
                                });
                            } else {
                                dropdownList.innerHTML = '<li class="dropdown-item-text text-center text-muted">Chưa có thông báo</li>';
                            }
                        }
                    });
                
                updateHeaderNotificationBadge();
            }

            function addNotificationToDropdown(notification) {
                const dropdownList = document.getElementById('notificationDropdownList');
                const notificationItem = document.createElement('li');
                
                notificationItem.innerHTML = `
                    <a class="dropdown-item ${!notification.isRead ? 'fw-bold' : ''}" href="/Notifications">
                        <div class="d-flex">
                            <div class="flex-shrink-0">
                                <i class="bi bi-bell text-primary"></i>
                            </div>
                            <div class="flex-grow-1 ms-2">
                                <div class="fw-normal">${notification.message}</div>
                                <small class="text-muted">${notification.sentDate}</small>
                            </div>
                        </div>
                    </a>
                `;
                
                dropdownList.insertBefore(notificationItem, dropdownList.firstChild);
                
                // Giới hạn số lượng thông báo hiển thị
                while (dropdownList.children.length > 5) {
                    dropdownList.removeChild(dropdownList.lastChild);
                }
            }

            // Cập nhật số lượng thông báo khi dropdown được mở
            document.getElementById('notificationDropdown').addEventListener('shown.bs.dropdown', function () {
                loadHeaderNotifications();
            });
        </script>
    }
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
